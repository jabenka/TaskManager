version: '3.8'

services:
  #infra
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-taskmanager}
    ports:
      - "5438:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-taskmanager}" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ../monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  #servicies
  discovery-service:
    image: discovery-service:latest
    container_name: DiscoveryServer
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - microservices-net
    depends_on:
      - postgres

  auth-service:
    image: auth-service:latest
    container_name: AuthServer
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: AuthServer
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DB_NAME:-taskmanager}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-password}
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8081/eureka
    ports:
      - "8430:8430"
    networks:
      - microservices-net
    depends_on:
      - discovery-service

  task-service:
    image: task-service:latest
    container_name: TaskService
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: TaskService
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DB_NAME:-taskmanager}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-password}
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER:-guest}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
      SPRING_RABBITMQ_VIRTUAL_HOST: /
    ports:
      - "9120:9120"
    networks:
      - microservices-net
    depends_on:
      - rabbitmq
      - discovery-service
      - postgres

  gateway:
    image: gateway:latest
    container_name: Gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: Gateway
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8081/eureka
    ports:
      - "5920:5920"
    networks:
      - microservices-net
    depends_on:
      - discovery-service

  notification-service:
    image: notification-service:latest
    container_name: NotificationService
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: NotificationService
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER:-guest}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
      SPRING_RABBITMQ_VIRTUAL_HOST: /
      SPRING_RABBITMQ_QUEUE: notifications.queue
    networks:
      - microservices-net
    depends_on:
      - rabbitmq
      - discovery-service

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
